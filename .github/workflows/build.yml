name: Build coreboot for the POWER9 Talos II target
on:
  push:
    branches:
      - talos_2_support
      - squashed_talos_2_support
      - talos_2_support_ramstage
      - talos_2_support_payload_test
  pull_request:
    branches:
      - talos_2_support
      - squashed_talos_2_support
      - talos_2_support_ramstage
    tags:
      - 'dasharo-trustworthy-computing-*'

jobs:
  build:
    runs-on: [self-hosted, builder]
    container:
      image: 3mdeb/coreboot-sdk:mkimage
      options: --user 1001:1001 --workdir /home/coreboot

    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        # Checkout pull request HEAD commit instead of merge commit
        # See: https://github.com/actions/checkout#checkout-pull-request-head-commit-instead-of-merge-commit
        ref: ${{ github.event.pull_request.head.sha }}
        # Fetch complete history
        fetch-depth: 0
    - name: Checkout all submodules
      run: git submodule update --init --recursive --checkout

    - name: Build information
      run: |
        date
        id -u
        git --version
        git rev-parse --verify HEAD
        git log -n 1
        git log --graph --decorate --pretty=oneline --abbrev-commit -n 20

    # Run build for just one random x86 mainboard so we can finish the build on
    # public runnner. Building all of them takes 4+ hours and we run out of
    # space. This already should give us some idea if we break something in
    # common code.
    - name: Run upstream coreboot tests (for one mainboard)
      run: make -j $(nproc) what-jenkins-does JENKINS_ABUILD_OPT="-t intel/glkrvp"

    - name: Build Talos II target (bootblock in PNOR)
      run: |
        cp configs/config.raptor-cs-talos-2 .config
        make olddefconfig
        make -j $(nproc)

    - name: Save Talos II artifacts
      uses: actions/upload-artifact@v2
      with:
        name: coreboot-binary
        path: |
          build/coreboot.rom
          build/coreboot.rom.signed.ecc
        retention-days: 7

    - name: Build Talos II target (bootblock in SEEPROM)
      run: |
        make clean
        cp configs/config.raptor-cs-talos-2-bootblock-in-seeprom .config
        make olddefconfig
        make -j $(nproc)

  test:
    runs-on: [self-hosted, builder]
    steps:
    - name: Generate ssh config
      run: |
        mkdir -p ~/.ssh
        cat << EOF > ~/.ssh/config
        Host *
          StrictHostKeyChecking no
        EOF
        chmod 700 ~/.ssh
        chmod 600 ~/.ssh/config

    - name: Test SSH
      run: |
        eval $(ssh-agent -s)
        echo "Adding key"
        echo "${TALOS_KEY}" | ssh-add -
        echo "Starting SSH"
        ssh "${TALOS_USER}@${TALOS_IP}" 'cat ~/test'
      env:
        TALOS_USER: ${{ secrets.TALOS_USERNAME }}
        TALOS_IP: ${{ secrets.TALOS_IP }}
        TALOS_KEY: ${{ secrets.TALOS_KEY }}

  build-freebsd:
    runs-on: macos-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@v2
      with:
        # Checkout pull request HEAD commit instead of merge commit
        # See: https://github.com/actions/checkout#checkout-pull-request-head-commit-instead-of-merge-commit
        ref: ${{ github.event.pull_request.head.sha }}
        # Fetch complete history
        fetch-depth: 0
    - name: Checkout all submodules
      run: git submodule update --init --recursive --checkout

    - name: Build some tools in FreeBSD VM
      id: test
      uses: vmactions/freebsd-vm@v0.1.4
      with:
        usesh: true
        mem: 2048
        prepare: |
          pkg install -y git gmake gcc pciutils openssl pkgconf bash
        run: |
          gmake -C util/amdfwtool
          gmake -C util/cbmem
          gmake -C util/futility
          gmake -C util/inteltool
          gmake -C util/intelvbttool
          gmake -C util/nvramtool
          gmake -C util/superiotool
          gmake -C util/ifdtool
          gmake -C util/cbfstool
